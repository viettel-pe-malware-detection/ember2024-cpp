#ifndef ADD
#define ADD(x, y) // nothing, to make the in-IDE compiler happy
#endif

ADD(0x00000000, TYPE_REG)
ADD(0x00000001, TYPE_DSECT)
ADD(0x00000002, TYPE_NOLOAD)
ADD(0x00000004, TYPE_GROUP)
ADD(0x00000008, TYPE_NO_PAD)
ADD(0x00000010, TYPE_COPY)
ADD(0x00000020, CNT_CODE)
ADD(0x00000040, CNT_INITIALIZED_DATA)
ADD(0x00000080, CNT_UNINITIALIZED_DATA)
ADD(0x00000100, LNK_OTHER)
ADD(0x00000200, LNK_INFO)
ADD(0x00000400, LNK_OVER)
ADD(0x00000800, LNK_REMOVE)
ADD(0x00001000, LNK_COMDAT)
ADD(0x00004000, MEM_PROTECTED)
ADD(0x00004000, NO_DEFER_SPEC_EXC)
ADD(0x00008000, GPREL)
ADD(0x00008000, MEM_FARDATA)
ADD(0x00010000, MEM_SYSHEAP)
ADD(0x00020000, MEM_PURGEABLE)
ADD(0x00020000, MEM_16BIT)
ADD(0x00040000, MEM_LOCKED)
ADD(0x00080000, MEM_PRELOAD)
ADD(0x00100000, ALIGN_1BYTES)
ADD(0x00200000, ALIGN_2BYTES)
ADD(0x00300000, ALIGN_4BYTES)
ADD(0x00400000, ALIGN_8BYTES)
ADD(0x00500000, ALIGN_16BYTES)
ADD(0x00600000, ALIGN_32BYTES)
ADD(0x00700000, ALIGN_64BYTES)
ADD(0x00800000, ALIGN_128BYTES)
ADD(0x00900000, ALIGN_256BYTES)
ADD(0x00A00000, ALIGN_512BYTES)
ADD(0x00B00000, ALIGN_1024BYTES)
ADD(0x00C00000, ALIGN_2048BYTES)
ADD(0x00D00000, ALIGN_4096BYTES)
ADD(0x00E00000, ALIGN_8192BYTES)
ADD(0x00F00000, ALIGN_MASK)
ADD(0x01000000, LNK_NRELOC_OVFL)
ADD(0x02000000, MEM_DISCARDABLE)
ADD(0x04000000, MEM_NOT_CACHED)
ADD(0x08000000, MEM_NOT_PAGED)
ADD(0x10000000, MEM_SHARED)
ADD(0x20000000, MEM_EXECUTE)
ADD(0x40000000, MEM_READ)
ADD(0x80000000, MEM_WRITE)
